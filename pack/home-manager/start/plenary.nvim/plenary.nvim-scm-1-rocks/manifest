commands = {}
dependencies = {
   luassert = {},
   ["plenary.nvim"] = {
      ["scm-1"] = {
         {
            constraints = {
               {
                  op = ">=",
                  version = {
                     5, 1, string = "5.1"
                  }
               },
               {
                  op = "<",
                  version = {
                     5, 4, string = "5.4"
                  }
               }
            },
            name = "lua"
         },
         {
            constraints = {},
            name = "luassert"
         }
      }
   }
}
modules = {
   ["luassert.array"] = {
      "plenary.nvim/scm-1"
   },
   ["luassert.assert"] = {
      "plenary.nvim/scm-1"
   },
   ["luassert.assertions"] = {
      "plenary.nvim/scm-1"
   },
   ["luassert.compatibility"] = {
      "plenary.nvim/scm-1"
   },
   ["luassert.formatters.binarystring"] = {
      "plenary.nvim/scm-1"
   },
   ["luassert.formatters.init"] = {
      "plenary.nvim/scm-1"
   },
   ["luassert.init"] = {
      "plenary.nvim/scm-1"
   },
   ["luassert.languages.en"] = {
      "plenary.nvim/scm-1"
   },
   ["luassert.match"] = {
      "plenary.nvim/scm-1"
   },
   ["luassert.matchers.composite"] = {
      "plenary.nvim/scm-1"
   },
   ["luassert.matchers.core"] = {
      "plenary.nvim/scm-1"
   },
   ["luassert.matchers.init"] = {
      "plenary.nvim/scm-1"
   },
   ["luassert.mock"] = {
      "plenary.nvim/scm-1"
   },
   ["luassert.modifiers"] = {
      "plenary.nvim/scm-1"
   },
   ["luassert.namespaces"] = {
      "plenary.nvim/scm-1"
   },
   ["luassert.spy"] = {
      "plenary.nvim/scm-1"
   },
   ["luassert.state"] = {
      "plenary.nvim/scm-1"
   },
   ["luassert.stub"] = {
      "plenary.nvim/scm-1"
   },
   ["luassert.util"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.async.api"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.async.async"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.async.control"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.async.init"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.async.lsp"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.async.structs"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.async.tests"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.async.util"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.async.uv_async"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.async_lib.api"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.async_lib.async"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.async_lib.init"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.async_lib.lsp"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.async_lib.structs"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.async_lib.tests"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.async_lib.util"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.async_lib.uv_async"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.benchmark.init"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.benchmark.stat"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.bit"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.busted"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.class"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.collections.py_list"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.context_manager"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.curl"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.debug_utils"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.enum"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.errors"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.filetype"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.fun"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.functional"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.init"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.iterators"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.job"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.json"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.log"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.lsp.override"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.neorocks.init"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.nvim_meta"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.operators"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.path"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.popup.init"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.popup.utils"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.profile"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.profile.lua_profiler"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.profile.memory_profiler"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.profile.p"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.reload"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.run"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.scandir"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.strings"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.tbl"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.test_harness"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.vararg.init"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.vararg.rotate"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.window.border"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.window.float"] = {
      "plenary.nvim/scm-1"
   },
   ["plenary.window.init"] = {
      "plenary.nvim/scm-1"
   },
   say = {
      "plenary.nvim/scm-1"
   }
}
repository = {
   ["plenary.nvim"] = {
      ["scm-1"] = {
         {
            arch = "installed",
            commands = {},
            dependencies = {},
            modules = {
               ["luassert.array"] = "luassert/array.lua",
               ["luassert.assert"] = "luassert/assert.lua",
               ["luassert.assertions"] = "luassert/assertions.lua",
               ["luassert.compatibility"] = "luassert/compatibility.lua",
               ["luassert.formatters.binarystring"] = "luassert/formatters/binarystring.lua",
               ["luassert.formatters.init"] = "luassert/formatters/init.lua",
               ["luassert.init"] = "luassert/init.lua",
               ["luassert.languages.en"] = "luassert/languages/en.lua",
               ["luassert.match"] = "luassert/match.lua",
               ["luassert.matchers.composite"] = "luassert/matchers/composite.lua",
               ["luassert.matchers.core"] = "luassert/matchers/core.lua",
               ["luassert.matchers.init"] = "luassert/matchers/init.lua",
               ["luassert.mock"] = "luassert/mock.lua",
               ["luassert.modifiers"] = "luassert/modifiers.lua",
               ["luassert.namespaces"] = "luassert/namespaces.lua",
               ["luassert.spy"] = "luassert/spy.lua",
               ["luassert.state"] = "luassert/state.lua",
               ["luassert.stub"] = "luassert/stub.lua",
               ["luassert.util"] = "luassert/util.lua",
               ["plenary.async.api"] = "plenary/async/api.lua",
               ["plenary.async.async"] = "plenary/async/async.lua",
               ["plenary.async.control"] = "plenary/async/control.lua",
               ["plenary.async.init"] = "plenary/async/init.lua",
               ["plenary.async.lsp"] = "plenary/async/lsp.lua",
               ["plenary.async.structs"] = "plenary/async/structs.lua",
               ["plenary.async.tests"] = "plenary/async/tests.lua",
               ["plenary.async.util"] = "plenary/async/util.lua",
               ["plenary.async.uv_async"] = "plenary/async/uv_async.lua",
               ["plenary.async_lib.api"] = "plenary/async_lib/api.lua",
               ["plenary.async_lib.async"] = "plenary/async_lib/async.lua",
               ["plenary.async_lib.init"] = "plenary/async_lib/init.lua",
               ["plenary.async_lib.lsp"] = "plenary/async_lib/lsp.lua",
               ["plenary.async_lib.structs"] = "plenary/async_lib/structs.lua",
               ["plenary.async_lib.tests"] = "plenary/async_lib/tests.lua",
               ["plenary.async_lib.util"] = "plenary/async_lib/util.lua",
               ["plenary.async_lib.uv_async"] = "plenary/async_lib/uv_async.lua",
               ["plenary.benchmark.init"] = "plenary/benchmark/init.lua",
               ["plenary.benchmark.stat"] = "plenary/benchmark/stat.lua",
               ["plenary.bit"] = "plenary/bit.lua",
               ["plenary.busted"] = "plenary/busted.lua",
               ["plenary.class"] = "plenary/class.lua",
               ["plenary.collections.py_list"] = "plenary/collections/py_list.lua",
               ["plenary.context_manager"] = "plenary/context_manager.lua",
               ["plenary.curl"] = "plenary/curl.lua",
               ["plenary.debug_utils"] = "plenary/debug_utils.lua",
               ["plenary.enum"] = "plenary/enum.lua",
               ["plenary.errors"] = "plenary/errors.lua",
               ["plenary.filetype"] = "plenary/filetype.lua",
               ["plenary.fun"] = "plenary/fun.lua",
               ["plenary.functional"] = "plenary/functional.lua",
               ["plenary.init"] = "plenary/init.lua",
               ["plenary.iterators"] = "plenary/iterators.lua",
               ["plenary.job"] = "plenary/job.lua",
               ["plenary.json"] = "plenary/json.lua",
               ["plenary.log"] = "plenary/log.lua",
               ["plenary.lsp.override"] = "plenary/lsp/override.lua",
               ["plenary.neorocks.init"] = "plenary/neorocks/init.lua",
               ["plenary.nvim_meta"] = "plenary/nvim_meta.lua",
               ["plenary.operators"] = "plenary/operators.lua",
               ["plenary.path"] = "plenary/path.lua",
               ["plenary.popup.init"] = "plenary/popup/init.lua",
               ["plenary.popup.utils"] = "plenary/popup/utils.lua",
               ["plenary.profile"] = "plenary/profile.lua",
               ["plenary.profile.lua_profiler"] = "plenary/profile/lua_profiler.lua",
               ["plenary.profile.memory_profiler"] = "plenary/profile/memory_profiler.lua",
               ["plenary.profile.p"] = "plenary/profile/p.lua",
               ["plenary.reload"] = "plenary/reload.lua",
               ["plenary.run"] = "plenary/run.lua",
               ["plenary.scandir"] = "plenary/scandir.lua",
               ["plenary.strings"] = "plenary/strings.lua",
               ["plenary.tbl"] = "plenary/tbl.lua",
               ["plenary.test_harness"] = "plenary/test_harness.lua",
               ["plenary.vararg.init"] = "plenary/vararg/init.lua",
               ["plenary.vararg.rotate"] = "plenary/vararg/rotate.lua",
               ["plenary.window.border"] = "plenary/window/border.lua",
               ["plenary.window.float"] = "plenary/window/float.lua",
               ["plenary.window.init"] = "plenary/window/init.lua",
               say = "say.lua"
            }
         }
      }
   }
}
